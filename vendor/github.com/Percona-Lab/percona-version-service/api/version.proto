syntax="proto3";

package version;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/Percona-Lab/percona-version-service/proto;version";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://github.com/Percona-Lab/percona-version-service";
    description: "gRPC-gateway boilerplate repository";
  }
  schemes: [HTTP, HTTPS];
};

service VersionService {
  rpc Apply(ApplyRequest) returns (VersionResponse) {
    option (google.api.http) = {
      // Route to this method from GET requests to /versions/v1/{product}/{operatorVersion}/{apply} 
      get: "/api/versions/v1/{product}/{operator_version}/{apply}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Specific version"
      description: "Return specific product version"
    };
  }
}

message ApplyRequest {
  string product = 1;
  string operator_version = 2;
  string apply = 3;
  string database_version = 4;
  string kube_version = 5;
  string platform = 6;
  string pmm_version = 7;
  string backup_version = 8;
  string namespace_oid = 9;
  string customResource_oid = 10; 
}

message Version {
  string image_path = 1;
  string image_hash = 2;
  string status = 3;
  bool critical = 4;
 }

message VersionMatrix {
  map<string, Version> mongod = 1;
  map<string, Version> pxc = 2;
  map<string, Version> pmm = 3;
  map<string, Version> proxysql = 4;
  map<string, Version> haproxy = 5;
  map<string, Version> backup = 6;
  map<string, Version> operator = 7;
}

message OperatorVersion {
  string operator = 1;
  string database = 2;
  VersionMatrix matrix = 3;
}

message VersionResponse {
  repeated OperatorVersion versions = 1;
}
